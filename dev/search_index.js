var documenterSearchIndex = {"docs":
[{"location":"lib/cfmessage/#","page":"CFMessage","title":"CFMessage","text":"Author = \"Robert Rosca\"","category":"page"},{"location":"lib/cfmessage/#lib_cfmessage-1","page":"CFMessage","title":"CFMessage","text":"","category":"section"},{"location":"lib/cfmessage/#","page":"CFMessage","title":"CFMessage","text":"CFMessage contains a number of utility functions for converting variables in a GRIB message to the values a user would expect to work with.","category":"page"},{"location":"lib/cfmessage/#","page":"CFMessage","title":"CFMessage","text":"Modules = [CfGRIB]\nPages   = [\"cfmessage.jl\"]","category":"page"},{"location":"lib/cfmessage/#","page":"CFMessage","title":"CFMessage","text":"Modules = [CfGRIB]\nPages   = [\"cfmessage.jl\"]","category":"page"},{"location":"lib/cfmessage/#CfGRIB.COMPUTED_KEYS","page":"CFMessage","title":"CfGRIB.COMPUTED_KEYS","text":"COMPUTED_KEYS::Dict{String,Tuple{Function,Function}}\n\nDictionary which maps a key to a conversion method. The first function is the 'to' conversion, the second is 'from'.\n\nTODO: Actually applying the from_grib_step function results in different values to cfgrib.py, so step -> (from_grib_step, to_grib_step) is currently disabled.\n\nCurrently converts:\n\n    \"time\" => (from_grib_date_time, to_grib_date_time)\n\n    \"valid_time\" => (\n        message -> from_grib_date_time(message, date_key=\"validityDate\", time_key=\"validityTime\"),\n        message -> to_grib_date_time(message, date_key=\"validityDate\", time_key=\"validityTime\"),\n    )\n\n    \"verifying_time\" => (from_grib_month, m -> throw(ErrorException(\"Unimplemented\")))\n\n    \"indexing_time\" => (\n        message -> from_grib_date_time(message, date_key=\"indexingDate\", time_key=\"indexingTime\"),\n        message -> to_grib_date_time(message, date_key=\"indexingDate\", time_key=\"indexingTime\"),\n    )\n\nExample\n\nA GRIB message containing 20160501 as the date key and 0 as the time key would end up calling:\n\njulia> CfGRIB.COMPUTED_KEYS[\"time\"](20160501, 0)\n1462060800\n\n\n\n\n\n","category":"constant"},{"location":"lib/cfmessage/#CfGRIB.DEFAULT_EPOCH","page":"CFMessage","title":"CfGRIB.DEFAULT_EPOCH","text":"DateTime(1970, 1, 1, 0, 0)\n\nDefault epoch used for from_ and to_ methods, set to 1st of January 1970.\n\n\n\n\n\n","category":"constant"},{"location":"lib/cfmessage/#CfGRIB.GRIB_STEP_UNITS_TO_SECONDS","page":"CFMessage","title":"CfGRIB.GRIB_STEP_UNITS_TO_SECONDS","text":"Union{Missing, Int64}[60, 3600, 86400, missing, missing, missing, missing, missing, missing, missing, 10800, 21600, 43200, 1, 900]\n\nArray used to convert the grib step units to seconds. As Julia is 1-indexed, not 0 like Python, you should take care to correctly access the array (typically +1 to the step units).\n\n\n\n\n\n","category":"constant"},{"location":"lib/cfmessage/#CfGRIB.build_valid_time-Tuple{Array{Int64,1},Array{Int64,1}}","page":"CFMessage","title":"CfGRIB.build_valid_time","text":"build_valid_time(\n    time::Array{Int, 1}, step::Array{Int, 1}\n)::Union{\n    Tuple{Tuple{},Int64},\n    Tuple{Tuple{String,String},Array{Int64,2}}\n}\n\nReturns a pair of (dims, data) based on the type of input, this function behaves like:\n\njulia> CfGRIB.build_valid_time([10, 10], [10, 10])\n((\"time\", \"step\"), [36010 36010; 36010 36010])\n\nHowever if it receives two arrays of one element then it  dispatches to build_valid_time(time::Int, step::Int):\n\njulia> CfGRIB.build_valid_time([10], [10])\n((), 36010)\n\n\n\n\n\n","category":"method"},{"location":"lib/cfmessage/#CfGRIB.build_valid_time-Tuple{Array{Int64,1},Int64}","page":"CFMessage","title":"CfGRIB.build_valid_time","text":"build_valid_time(\n    time::Array{Int, 1}, step::Int\n)::Tuple{Tuple{String},Array{Int64,1}}\n\nReturns a pair of (dims, data) based on the type of input, this function behaves like:\n\njulia> CfGRIB.build_valid_time([10], 10)\n((\"time\",), [36010])\n\n\n\n\n\n","category":"method"},{"location":"lib/cfmessage/#CfGRIB.build_valid_time-Tuple{Int64,Array{Int64,1}}","page":"CFMessage","title":"CfGRIB.build_valid_time","text":"build_valid_time(\n    time::Int, step::Array{Int, 1}\n)::Tuple{Tuple{String},Array{Int64,1}}\n\nReturns a pair of (dims, data) based on the type of input, this function behaves like:\n\njulia> CfGRIB.build_valid_time(1, [10])\n((\"step\",), [36001])\n\n\n\n\n\n","category":"method"},{"location":"lib/cfmessage/#CfGRIB.build_valid_time-Tuple{Int64,Int64}","page":"CFMessage","title":"CfGRIB.build_valid_time","text":"build_valid_time(\n    time::Int, step::Int\n)::Tuple{Tuple{},Int64}\n\nReturns a pair of (dims, data) based on the type of input, this function behaves like:\n\njulia> CfGRIB.build_valid_time(10, 10)\n((), 36010)\n\n\n\n\n\n","category":"method"},{"location":"lib/cfmessage/#CfGRIB.from_grib_date_time-Tuple{GRIB.Message}","page":"CFMessage","title":"CfGRIB.from_grib_date_time","text":"from_grib_date_time(\n        message::GRIB.Message; date_key=\"dataDate\",\n        time_key=\"dataTime\", epoch=DEFAULT_EPOCH\n)\n\nPulls out the date and time from given keys and passes them to from_grib_date_time(::Int, ::Int)\n\n\n\n\n\n","category":"method"},{"location":"lib/cfmessage/#CfGRIB.from_grib_date_time-Tuple{Int64,Int64}","page":"CFMessage","title":"CfGRIB.from_grib_date_time","text":"from_grib_date_time(date::Int, time::Int; epoch=DEFAULT_EPOCH)\n\nReturns the integer seconds from epoch to the given date and time.\n\n\n\n\n\n","category":"method"},{"location":"lib/cfmessage/#CfGRIB.from_grib_month","page":"CFMessage","title":"CfGRIB.from_grib_month","text":"from_grib_month(\n    message::GRIB.Message,\n    verifying_month_key=\"verifyingMonth\",\n    epoch=DEFAULT_EPOCH\n)\n\nReturns the integer seconds from the epoch to the verifying month value in the GRIB message.\n\n\n\n\n\n","category":"function"},{"location":"lib/cfmessage/#CfGRIB.from_grib_step","page":"CFMessage","title":"CfGRIB.from_grib_step","text":"from_grib_step(\n        message::GRIB.Message,\n        step_key=\"endStep\", step_unit_key=\"stepUnits\"\n)\n\nReturns the step_key value in hours.\n\nUses GRIB_STEP_UNITS_TO_SECONDS to convert the step values to seconds, then divides by 3600.0 to get hours.\n\n\n\n\n\n","category":"function"},{"location":"lib/cfmessage/#CfGRIB.read_message-Tuple{GRIB.Message,String}","page":"CFMessage","title":"CfGRIB.read_message","text":"read_message(message::GRIB.Message, key::String)\n\nReads a specific key from a GRIB.jl message. Attempts to convert the raw value associated with that key using the COMPUTED_KEYS mapping to from_grib_* functions.\n\n\n\n\n\n","category":"method"},{"location":"lib/indexing/#","page":"Indexing","title":"Indexing","text":"Author = \"Robert Rosca\"","category":"page"},{"location":"lib/indexing/#lib_indexing-1","page":"Indexing","title":"Indexing","text":"","category":"section"},{"location":"lib/indexing/#","page":"Indexing","title":"Indexing","text":"GRIB.jl is by CfGRIB to read the GRIB files, GRIB.jl provides its own ways to create, read, and filter an index, however cfgrib.py uses a different approach to indexing. So, CfGRIB.jl, being based on the python implementation, recreates the python approach instead of integrating with the GRIB.jl indexing approach.","category":"page"},{"location":"lib/indexing/#","page":"Indexing","title":"Indexing","text":"The indexing file defines the FileIndex type, as well as the constructors for that type.","category":"page"},{"location":"lib/indexing/#","page":"Indexing","title":"Indexing","text":"Modules = [CfGRIB]\nPages   = [\"indexing.jl\"]","category":"page"},{"location":"lib/indexing/#","page":"Indexing","title":"Indexing","text":"Modules = [CfGRIB]\nPages   = [\"indexing.jl\"]","category":"page"},{"location":"lib/indexing/#CfGRIB.FileIndex","page":"Indexing","title":"CfGRIB.FileIndex","text":"FileIndex\n\nA mutable store for indices of a GRIB file\n\nConstructors\n\nFileIndex(grib_path::String, index_keys::Array{String, 1})\n\nFields\n\nallowed_protocol_version::VersionNumber : Version number used when saving/hashing index files\ngrib_path::String : Path to the file the index belongs to\nindex_path::String : Path to the index cache file\nindex_keys::Array{String, 1} :\noffsets::Array :\nheader_values::OrderedDict{String, Array} :\nfilter_by_keys::Dict :\n\n\n\n\n\n","category":"type"},{"location":"lib/constants/#","page":"Constants","title":"Constants","text":"Author = \"Robert Rosca\"","category":"page"},{"location":"lib/constants/#lib_constants-1","page":"Constants","title":"Constants","text":"","category":"section"},{"location":"lib/constants/#","page":"Constants","title":"Constants","text":"Constants contains a number of constant arrays and dictionaries used to define which keys and attributes are expected to be present in a GRIB message, how to map grid types to correct representations of the data, etc...","category":"page"},{"location":"lib/constants/#","page":"Constants","title":"Constants","text":"These constants are shown in the documentation for ease of use and reference purposes.","category":"page"},{"location":"lib/constants/#","page":"Constants","title":"Constants","text":"Modules = [CfGRIB]\nPages   = [\"constants.jl\"]","category":"page"},{"location":"lib/constants/#","page":"Constants","title":"Constants","text":"Modules = [CfGRIB]\nPages   = [\"constants.jl\"]","category":"page"},{"location":"lib/constants/#CfGRIB.ALL_HEADER_DIMS","page":"Constants","title":"CfGRIB.ALL_HEADER_DIMS","text":"SubString{String}[\"13-element\", \"Array{String,1}:\", \"\\\"number\\\"\", \"\\\"level\\\"\", \"\\\"dataDate\\\"\", \"\\\"dataTime\\\"\", \"\\\"endStep\\\"\", \"\\\"time\\\"\", \"\\\"step\\\"\", \"\\\"valid\\time\\\"\", \"\\\"verifying\\time\\\"\", \"\\\"indexing\\_time\\\"\", \"\\\"forecastMonth\\\"\", \"\\\"directionNumber\\\"\", \"\\\"frequencyNumber\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.ALL_KEYS","page":"Constants","title":"CfGRIB.ALL_KEYS","text":"SubString{String}[\"60-element\", \"Array{String,1}:\", \"\\\"DxInMetres\\\"\", \"\\\"DyInMetres\\\"\", \"\\\"J\\\"\", \"\\\"K\\\"\", \"\\\"LaDInDegrees\\\"\", \"\\\"Latin1InDegrees\\\"\", \"\\\"Latin2InDegrees\\\"\", \"\\\"LoVInDegrees\\\"\", \"\\\"M\\\"\", \"\\\"N\\\"\", \"\\\"NV\\\"\", \"\\\"Nx\\\"\", \"\\\"Ny\\\"\", \"\\\"angleOfRotationInDegrees\\\"\", \"\\\"centre\\\"\", \"\\\"centreDescription\\\"\", \"\\\"cfName\\\"\", \"\\\"cfVarName\\\"\", \"\\\"dataDate\\\"\", \"\\\"dataTime\\\"\", \"\\\"dataType\\\"\", \"\\\"directionNumber\\\"\", \"\\\"edition\\\"\", \"\\\"endStep\\\"\", \"\\\"forecastMonth\\\"\", \"\\\"frequencyNumber\\\"\", \"\\\"gridDefinitionDescription\\\"\", \"\\\"gridType\\\"\", \"\\\"iDirectionIncrementInDegrees\\\"\", \"\\\"iScansNegatively\\\"\", \"\\\"indexing\\time\\\"\", \"\\\"jDirectionIncrementInDegrees\\\"\", \"\\\"jPointsAreConsecutive\\\"\", \"\\\"jScansPositively\\\"\", \"\\\"latitudeOfFirstGridPointInDegrees\\\"\", \"\\\"latitudeOfLastGridPointInDegrees\\\"\", \"\\\"latitudeOfSouthernPoleInDegrees\\\"\", \"\\\"level\\\"\", \"\\\"longitudeOfFirstGridPointInDegrees\\\"\", \"\\\"longitudeOfLastGridPointInDegrees\\\"\", \"\\\"longitudeOfSouthernPoleInDegrees\\\"\", \"\\\"missingValue\\\"\", \"\\\"name\\\"\", \"\\\"number\\\"\", \"\\\"numberOfDirections\\\"\", \"\\\"numberOfFrequencies\\\"\", \"\\\"numberOfPoints\\\"\", \"\\\"paramId\\\"\", \"\\\"pl\\\"\", \"\\\"shortName\\\"\", \"\\\"step\\\"\", \"\\\"stepType\\\"\", \"\\\"stepUnits\\\"\", \"\\\"subCentre\\\"\", \"\\\"time\\\"\", \"\\\"totalNumber\\\"\", \"\\\"typeOfLevel\\\"\", \"\\\"units\\\"\", \"\\\"valid\\time\\\"\", \"\\\"verifying\\_time\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.ALL_REF_TIME_KEYS","page":"Constants","title":"CfGRIB.ALL_REF_TIME_KEYS","text":"SubString{String}[\"6-element\", \"Array{String,1}:\", \"\\\"time\\\"\", \"\\\"step\\\"\", \"\\\"valid\\time\\\"\", \"\\\"verifying\\time\\\"\", \"\\\"indexing\\_time\\\"\", \"\\\"forecastMonth\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.COORD_ATTRS","page":"Constants","title":"CfGRIB.COORD_ATTRS","text":"SubString{String}[\"Dict{String,Dict{String,String}}\", \"with\", \"15\", \"entries:\", \"\\\"number\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"1\\\",\\\"long\\name\\\"=>\\\"ensemble\", \"member\", \"numerical\", \"id\\\",\\\"standard\\name\\\"=>\\\"realization\\\")\", \"\\\"time\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"seconds\", \"since\", \"1970-01-01T00:00:00\\\",\\\"calendar\\\"=>\\\"proleptic\\gregorian\\\",\\\"long\\name\\\"=>\\\"initial\", \"time\", \"of\", \"forecast\\\",\\\"standard\\name\\\"=>\\\"forecast\\reference\\time\\\")\", \"\\\"depthBelowLand\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"m\\\",\\\"long\\name\\\"=>\\\"soil\", \"depth\\\",\\\"standard\\name\\\"=>\\\"depth\\\",\\\"positive\\\"=>\\\"down\\\")\", \"\\\"hybrid\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"1\\\",\\\"long\\name\\\"=>\\\"hybrid\", \"level\\\",\\\"standard\\name\\\"=>\\\"atmosphere\\hybrid\\sigma\\pressure\\coordinate\\\",\\\"positive\\\"=>\\\"down\\\")\", \"\\\"depthBelowLandLayer\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"m\\\",\\\"long\\name\\\"=>\\\"soil\", \"depth\\\",\\\"standard\\name\\\"=>\\\"depth\\\",\\\"positive\\\"=>\\\"down\\\")\", \"\\\"isobaricLayer\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"Pa\\\",\\\"long\\name\\\"=>\\\"pressure\\\",\\\"standard\\name\\\"=>\\\"air\\pressure\\\",\\\"positive\\\"=>\\\"down\\\")\", \"\\\"step\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"hours\\\",\\\"long\\name\\\"=>\\\"time\", \"since\", \"forecast\\reference\\time\\\",\\\"standard\\name\\\"=>\\\"forecast\\period\\\")\", \"\\\"isobaricInhPa\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"hPa\\\",\\\"stored\\direction\\\"=>\\\"decreasing\\\",\\\"long\\name\\\"=>\\\"pressure\\\",\\\"standard\\name\\\"=>\\\"air\\pressure\\\",\\\"positive\\\"=>\\\"down\\\")\", \"\\\"isobaricInPa\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"Pa\\\",\\\"stored\\direction\\\"=>\\\"decreasing\\\",\\\"long\\name\\\"=>\\\"pressure\\\",\\\"standard\\name\\\"=>\\\"air\\pressure\\\",\\\"positive\\\"=>\\\"down\\\")\", \"\\\"valid\\time\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"seconds\", \"since\", \"1970-01-01T00:00:00\\\",\\\"calendar\\\"=>\\\"proleptic\\gregorian\\\",\\\"long\\name\\\"=>\\\"time\\\",\\\"standard\\name\\\"=>\\\"time\\\")\", \"\\\"indexing\\time\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"seconds\", \"since\", \"1970-01-01T00:00:00\\\",\\\"calendar\\\"=>\\\"proleptic\\gregorian\\\",\\\"long\\name\\\"=>\\\"nominal\", \"initial\", \"time\", \"of\", \"forecast\\\",\\\"standard\\name\\\"=>\\\"forecast\\reference\\time\\\")\", \"\\\"heightAboveGround\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"m\\\",\\\"long\\name\\\"=>\\\"height\", \"above\", \"the\", \"surface\\\",\\\"standard\\name\\\"=>\\\"height\\\",\\\"positive\\\"=>\\\"up\\\")\", \"\\\"latitude\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"degrees\\north\\\",\\\"long\\name\\\"=>\\\"latitude\\\",\\\"standard\\name\\\"=>\\\"latitude\\\")\", \"\\\"longitude\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"degrees\\east\\\",\\\"long\\name\\\"=>\\\"longitude\\\",\\\"standard\\name\\\"=>\\\"longitude\\\")\", \"\\\"verifying\\time\\\"\", \"=>\", \"Dict(\\\"units\\\"=>\\\"seconds\", \"since\", \"1970-01-01T00:00:00\\\",\\\"calendar\\\"=>\\\"proleptic\\gregorian\\\",\\\"long\\name\\\"=>\\\"time\\\",\\\"standard\\_name\\\"=>\\\"time\\\")\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.DATA_ATTRIBUTES_KEYS","page":"Constants","title":"CfGRIB.DATA_ATTRIBUTES_KEYS","text":"SubString{String}[\"18-element\", \"Array{String,1}:\", \"\\\"paramId\\\"\", \"\\\"shortName\\\"\", \"\\\"units\\\"\", \"\\\"name\\\"\", \"\\\"cfName\\\"\", \"\\\"cfVarName\\\"\", \"\\\"dataType\\\"\", \"\\\"missingValue\\\"\", \"\\\"numberOfPoints\\\"\", \"\\\"totalNumber\\\"\", \"\\\"numberOfDirections\\\"\", \"\\\"numberOfFrequencies\\\"\", \"\\\"typeOfLevel\\\"\", \"\\\"NV\\\"\", \"\\\"stepUnits\\\"\", \"\\\"stepType\\\"\", \"\\\"gridType\\\"\", \"\\\"gridDefinitionDescription\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.DATA_TIME_KEYS","page":"Constants","title":"CfGRIB.DATA_TIME_KEYS","text":"SubString{String}[\"3-element\", \"Array{String,1}:\", \"\\\"dataDate\\\"\", \"\\\"dataTime\\\"\", \"\\\"endStep\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.ENSEMBLE_KEYS","page":"Constants","title":"CfGRIB.ENSEMBLE_KEYS","text":"SubString{String}[\"1-element\", \"Array{String,1}:\", \"\\\"number\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.GLOBAL_ATTRIBUTES_KEYS","page":"Constants","title":"CfGRIB.GLOBAL_ATTRIBUTES_KEYS","text":"SubString{String}[\"4-element\", \"Array{String,1}:\", \"\\\"edition\\\"\", \"\\\"centre\\\"\", \"\\\"centreDescription\\\"\", \"\\\"subCentre\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.GRID_TYPES_2D_NON_DIMENSION_COORDS","page":"Constants","title":"CfGRIB.GRID_TYPES_2D_NON_DIMENSION_COORDS","text":"SubString{String}[\"5-element\", \"Array{String,1}:\", \"\\\"rotated\\ll\\\"\", \"\\\"rotated\\gg\\\"\", \"\\\"lambert\\\"\", \"\\\"albers\\\"\", \"\\\"polar\\_stereographic\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.GRID_TYPES_DIMENSION_COORDS","page":"Constants","title":"CfGRIB.GRID_TYPES_DIMENSION_COORDS","text":"SubString{String}[\"2-element\", \"Array{String,1}:\", \"\\\"regular\\ll\\\"\", \"\\\"regular\\gg\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.GRID_TYPE_KEYS","page":"Constants","title":"CfGRIB.GRID_TYPE_KEYS","text":"SubString{String}[\"25-element\", \"Array{String,1}:\", \"\\\"Nx\\\"\", \"\\\"Ny\\\"\", \"\\\"angleOfRotationInDegrees\\\"\", \"\\\"iDirectionIncrementInDegrees\\\"\", \"\\\"iScansNegatively\\\"\", \"\\\"jPointsAreConsecutive\\\"\", \"\\\"jScansPositively\\\"\", \"\\\"latitudeOfFirstGridPointInDegrees\\\"\", \"\\\"latitudeOfLastGridPointInDegrees\\\"\", \"\\\"latitudeOfSouthernPoleInDegrees\\\"\", \"\\\"longitudeOfFirstGridPointInDegrees\\\"\", \"\\\"longitudeOfLastGridPointInDegrees\\\"\", \"\\\"longitudeOfSouthernPoleInDegrees\\\"\", \"\\\"N\\\"\", \"\\\"M\\\"\", \"\\\"K\\\"\", \"\\\"J\\\"\", \"\\\"jDirectionIncrementInDegrees\\\"\", \"\\\"LaDInDegrees\\\"\", \"\\\"LoVInDegrees\\\"\", \"\\\"DyInMetres\\\"\", \"\\\"DxInMetres\\\"\", \"\\\"Latin2InDegrees\\\"\", \"\\\"Latin1InDegrees\\\"\", \"\\\"pl\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.GRID_TYPE_MAP","page":"Constants","title":"CfGRIB.GRID_TYPE_MAP","text":"SubString{String}[\"Dict{String,Array{String,1}}\", \"with\", \"8\", \"entries:\", \"\\\"rotated\\gg\\\"\", \"=>\", \"[\\\"Nx\\\",\", \"\\\"Ny\\\",\", \"\\\"angleOfRotationInDegrees\\\",\", \"\\\"iDirectionIncrementInDegrees\\\",\", \"\\\"iScansNegatively\\\",\", \"\\\"jPointsAreConsecutive\\\",\", \"\\\"jScansPositively\\\",\", \"\\\"latitudeOfFirstGridPointInDegrees\\\",\", \"\\\"latitudeOfLastGridPointInDegrees\\\",\", \"\\\"latitudeOfSouthernPoleInDegrees\\\",\", \"\\\"longitudeOfFirstGridPointInDegrees\\\",\", \"\\\"longitudeOfLastGridPointInDegrees\\\",\", \"\\\"longitudeOfSouthernPoleInDegrees\\\",\", \"\\\"N\\\"]\", \"\\\"regular\\gg\\\"\", \"=>\", \"[\\\"Nx\\\",\", \"\\\"iDirectionIncrementInDegrees\\\",\", \"\\\"iScansNegatively\\\",\", \"\\\"longitudeOfFirstGridPointInDegrees\\\",\", \"\\\"longitudeOfLastGridPointInDegrees\\\",\", \"\\\"N\\\",\", \"\\\"Ny\\\"]\", \"\\\"sh\\\"\", \"=>\", \"[\\\"M\\\",\", \"\\\"K\\\",\", \"\\\"J\\\"]\", \"\\\"regular\\ll\\\"\", \"=>\", \"[\\\"Nx\\\",\", \"\\\"iDirectionIncrementInDegrees\\\",\", \"\\\"iScansNegatively\\\",\", \"\\\"longitudeOfFirstGridPointInDegrees\\\",\", \"\\\"longitudeOfLastGridPointInDegrees\\\",\", \"\\\"Ny\\\",\", \"\\\"jDirectionIncrementInDegrees\\\",\", \"\\\"jPointsAreConsecutive\\\",\", \"\\\"jScansPositively\\\",\", \"\\\"latitudeOfFirstGridPointInDegrees\\\",\", \"\\\"latitudeOfLastGridPointInDegrees\\\"]\", \"\\\"lambert\\\"\", \"=>\", \"[\\\"LaDInDegrees\\\",\", \"\\\"LoVInDegrees\\\",\", \"\\\"iScansNegatively\\\",\", \"\\\"jPointsAreConsecutive\\\",\", \"\\\"jScansPositively\\\",\", \"\\\"latitudeOfFirstGridPointInDegrees\\\",\", \"\\\"latitudeOfSouthernPoleInDegrees\\\",\", \"\\\"longitudeOfFirstGridPointInDegrees\\\",\", \"\\\"longitudeOfSouthernPoleInDegrees\\\",\", \"\\\"DyInMetres\\\",\", \"\\\"DxInMetres\\\",\", \"\\\"Latin2InDegrees\\\",\", \"\\\"Latin1InDegrees\\\",\", \"\\\"Ny\\\",\", \"\\\"Nx\\\"]\", \"\\\"reduced\\gg\\\"\", \"=>\", \"[\\\"N\\\",\", \"\\\"pl\\\"]\", \"\\\"rotated\\ll\\\"\", \"=>\", \"[\\\"Nx\\\",\", \"\\\"Ny\\\",\", \"\\\"angleOfRotationInDegrees\\\",\", \"\\\"iDirectionIncrementInDegrees\\\",\", \"\\\"iScansNegatively\\\",\", \"\\\"jDirectionIncrementInDegrees\\\",\", \"\\\"jPointsAreConsecutive\\\",\", \"\\\"jScansPositively\\\",\", \"\\\"latitudeOfFirstGridPointInDegrees\\\",\", \"\\\"latitudeOfLastGridPointInDegrees\\\",\", \"\\\"latitudeOfSouthernPoleInDegrees\\\",\", \"\\\"longitudeOfFirstGridPointInDegrees\\\",\", \"\\\"longitudeOfLastGridPointInDegrees\\\",\", \"\\\"longitudeOfSouthernPoleInDegrees\\\"]\", \"\\\"reduced\\ll\\\"\", \"=>\", \"[\\\"Ny\\\",\", \"\\\"jDirectionIncrementInDegrees\\\",\", \"\\\"jPointsAreConsecutive\\\",\", \"\\\"jScansPositively\\\",\", \"\\\"latitudeOfFirstGridPointInDegrees\\\",\", \"\\\"latitudeOfLastGridPointInDegrees\\\"]\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.SPECTRA_KEYS","page":"Constants","title":"CfGRIB.SPECTRA_KEYS","text":"SubString{String}[\"2-element\", \"Array{String,1}:\", \"\\\"directionNumber\\\"\", \"\\\"frequencyNumber\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/constants/#CfGRIB.VERTICAL_KEYS","page":"Constants","title":"CfGRIB.VERTICAL_KEYS","text":"SubString{String}[\"1-element\", \"Array{String,1}:\", \"\\\"level\\\"\"]\n\n\n\n\n\n","category":"constant"},{"location":"lib/backends/#","page":"Backends","title":"Backends","text":"Author = \"Robert Rosca\"","category":"page"},{"location":"lib/backends/#lib_backends-1","page":"Backends","title":"Backends","text":"","category":"section"},{"location":"lib/backends/#","page":"Backends","title":"Backends","text":"CfGRIB.jl has a flexible backend system built in to allow for multiple ways to represent multidimensional data with named dimensions.","category":"page"},{"location":"lib/backends/#","page":"Backends","title":"Backends","text":"Backends are loaded in dynamically based on what packages the user has available, currently there are two built-in backends, one is based on DimensionalData.jl and the other uses AxisArrays.","category":"page"},{"location":"lib/backends/#","page":"Backends","title":"Backends","text":"Additionally, FileIO.jl integration is prepared for each of the backends so that users utilising FileIO can use its smart load functions which will load the file via CfGRIB.jl when the correct file extension and magic numbers are present.","category":"page"},{"location":"lib/backends/#","page":"Backends","title":"Backends","text":"Modules = [CfGRIB]\nPages   = [\"backends.jl\", \"backends/axisarrays.jl\", \"backends/dimensionaldata.jl\"]","category":"page"},{"location":"lib/backends/#","page":"Backends","title":"Backends","text":"Modules = [CfGRIB]\nPages   = [\"backends.jl\", \"backends/axisarrays.jl\", \"backends/dimensionaldata.jl\"]","category":"page"},{"location":"lib/dataset/#","page":"Dataset","title":"Dataset","text":"Author = \"Robert Rosca\"","category":"page"},{"location":"lib/dataset/#lib_dataset-1","page":"Dataset","title":"Dataset","text":"","category":"section"},{"location":"lib/dataset/#","page":"Dataset","title":"Dataset","text":"The dataset file contains the majority of the core code in CfGRIB.jl. It defines the key datatypes used throughout the package, as well as how data is read from the disk and how it gets interpreted.","category":"page"},{"location":"lib/dataset/#","page":"Dataset","title":"Dataset","text":"Modules = [CfGRIB]\nPages   = [\"dataset.jl\"]","category":"page"},{"location":"lib/dataset/#","page":"Dataset","title":"Dataset","text":"Modules = [CfGRIB]\nPages   = [\"dataset.jl\"]","category":"page"},{"location":"#cfgrib.jl-1","page":"Home","title":"cfgrib.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"(Image: lifecycle) (Image: Build Status) (Image: Codecov) (Image: latest release) (Image: Apache 2 license)","category":"page"},{"location":"#Description-1","page":"Home","title":"Description","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"cfgrib.jl is a julia interface to map GRIB files to the Unidata's Common Data Model v4 following the CF Conventions.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"This package is based on the python implementation in cfgrib.py and closely follows the approaches of that package, but in Julia instead. Parity tests are automatically performed between the two to ensure that the data returned by the Julia version is equivalent to that from Python.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"In Python xarray has come out to be a standard way to implement named arrays, however as Julia is a much younger language no stable array interface has been adopted by the community yet, so the approach here is more flexible and allows for multiple array backends to be used.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Low level access and decoding is performed by calling GRIB.jl which itself calls the ECMWF ecCodes library.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"The package is currently under heavy development so it has not been added to the Julia package registry yet. To install the package first clone this repository:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"git clone https://github.com/robertrosca/cfgrib.jl/\ncd cfgrib.jl","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Then start Julia, enter the pkg mode, activate the project (projects are similar to python venv's), install the GRIB.jl package (as it is also not on the registry), and then finally you can instantiate cfgrib.jl to get the rest of the dependencies:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"activate .\nadd https://github.com/weech/GRIB.jl\ninstantiate","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Finally exit pkg mode by pressing backspace, and use the package as usual:","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using cfgrib","category":"page"},{"location":"#TODO-1","page":"Home","title":"TODO","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation:\nadd badges for:\nstable docs\nlatest docs\ndocumentation build status\nfor auto-generation:\nadditional docstrings where required\nset up doc build and deploy through CI\nwrite up manual pages\nexamples\nadditional context around docstrings\nPackage:\nsee random todo's scattered through code\nmajor:\nfilterbyindex\nindex file generation and loading\nxarray-like backend\nmake code more idiomatic to julia","category":"page"}]
}
