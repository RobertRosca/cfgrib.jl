name: Tests

on:
  - push
  - pull_request

jobs:
  tests:
    name: Julia ${{ matrix.version }} - ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version: [1.4, 1.5]
    steps:
      - uses: actions/checkout@v2

      - uses: julia-actions/setup-julia@d3ce119a16594ea9e5d7974813970c73b6ab9e94
        with:
          version: ${{ matrix.version }}

      - name: Build Package
        env:
          JULIA_PKG_SERVER: ""
        run: |
          #  The actions are written directly to allow for nekost/act local runs
          #  https://github.com/julia-actions/julia-buildpkg
          julia --color=yes -e 'using Pkg; VERSION >= v"1.5-" && !isdir(joinpath(DEPOT_PATH[1], "registries", "General")) && Pkg.Registry.add("General")'
          julia --color=yes --project -e 'using Pkg; if VERSION >= v"1.1.0-rc1"; Pkg.build(verbose=true); else Pkg.build(); end'
          julia --color=yes --project -e 'using Pkg; using Conda; ENV["PYTHON"] = Conda.PYTHONDIR; Pkg.build("PyCall")'

      - name: Run Tests
        env:
          JULIA_PKG_SERVER: ""
        run: |
          #  https://github.com/julia-actions/julia-runtest
          julia --color=yes -e 'using Pkg; VERSION >= v"1.5-" && !isdir(joinpath(DEPOT_PATH[1], "registries", "General")) && Pkg.Registry.add("General")'
          julia --color=yes --check-bounds=yes --inline=yes --depwarn=yes --project -e 'using Pkg; Pkg.test(coverage=true)'

      - name: Process Coverage
        run: |
          #  https://github.com/julia-actions/julia-processcoverage
          julia --color=yes -e '
            using Pkg; Pkg.activate("coveragetempenv", shared=true)
            Pkg.add(PackageSpec(name="CoverageTools"))
            using CoverageTools
            pf = process_folder()
            LCOV.writefile("lcov.info", pf)
          '

      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
