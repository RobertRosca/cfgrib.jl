name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.continue-on-error }}
    strategy:
      matrix:
        continue-on-error: [false]
        version:
          - '1.4'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
        include:
          - version: 'nightly'
            continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - run: rm -rf /github/home/julia
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: |
          julia --project --color=yes --check-bounds=yes -e '\
            using Pkg;\
            Pkg.develop(PackageSpec(url="https://github.com/weech/GRIB.jl.git"));\
            Pkg.instantiate(); Pkg.build();\
            Pkg.add("Conda"), Pkg.add("PyCall");\
          '
          julia --project --color=yes --check-bounds=yes -e '\
            using Pkg; using Conda;\
            ENV["PYTHON"] = Conda.PYTHONDIR; Pkg.build("PyCall");\
            Conda.add_channel("conda-forge"); Conda.add("cfgrib");\
          '
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-uploadcodecov@latest
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
